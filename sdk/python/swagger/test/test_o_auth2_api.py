# coding: utf-8

"""
    Hydra OAuth2 & OpenID Connect Server

    Please refer to the user guide for in-depth documentation: https://ory.gitbooks.io/hydra/content/   Hydra offers OAuth 2.0 and OpenID Connect Core 1.0 capabilities as a service. Hydra is different, because it works with any existing authentication infrastructure, not just LDAP or SAML. By implementing a consent app (works with any programming language) you build a bridge between Hydra and your authentication infrastructure. Hydra is able to securely manage JSON Web Keys, and has a sophisticated policy-based access control you can use if you want to. Hydra is suitable for green- (new) and brownfield (existing) projects. If you are not familiar with OAuth 2.0 and are working on a greenfield project, we recommend evaluating if OAuth 2.0 really serves your purpose. Knowledge of OAuth 2.0 is imperative in understanding what Hydra does and how it works.   The official repository is located at https://github.com/ory/hydra   ### Important REST API Documentation Notes  The swagger generator used to create this documentation does currently not support example responses. To see request and response payloads click on **\"Show JSON schema\"**: ![Enable JSON Schema on Apiary](https://storage.googleapis.com/ory.am/hydra/json-schema.png)   The API documentation always refers to the latest tagged version of ORY Hydra. For previous API documentations, please refer to https://github.com/ory/hydra/blob/<tag-id>/docs/api.swagger.yaml - for example:  0.9.13: https://github.com/ory/hydra/blob/v0.9.13/docs/api.swagger.yaml 0.8.1: https://github.com/ory/hydra/blob/v0.8.1/docs/api.swagger.yaml

    OpenAPI spec version: Latest
    Contact: hi@ory.am
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.o_auth2_api import OAuth2Api


class TestOAuth2Api(unittest.TestCase):
    """ OAuth2Api unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.o_auth2_api.OAuth2Api()

    def tearDown(self):
        pass

    def test_accept_o_auth2_consent_request(self):
        """
        Test case for accept_o_auth2_consent_request

        Accept a consent request
        """
        pass

    def test_create_o_auth2_client(self):
        """
        Test case for create_o_auth2_client

        Create an OAuth 2.0 client
        """
        pass

    def test_delete_o_auth2_client(self):
        """
        Test case for delete_o_auth2_client

        Deletes an OAuth 2.0 Client
        """
        pass

    def test_get_o_auth2_client(self):
        """
        Test case for get_o_auth2_client

        Retrieve an OAuth 2.0 Client.
        """
        pass

    def test_get_o_auth2_consent_request(self):
        """
        Test case for get_o_auth2_consent_request

        Receive consent request information
        """
        pass

    def test_get_well_known(self):
        """
        Test case for get_well_known

        Server well known configuration
        """
        pass

    def test_introspect_o_auth2_token(self):
        """
        Test case for introspect_o_auth2_token

        Introspect OAuth2 tokens
        """
        pass

    def test_list_o_auth2_clients(self):
        """
        Test case for list_o_auth2_clients

        List OAuth 2.0 Clients
        """
        pass

    def test_oauth_auth(self):
        """
        Test case for oauth_auth

        The OAuth 2.0 authorize endpoint
        """
        pass

    def test_oauth_token(self):
        """
        Test case for oauth_token

        The OAuth 2.0 token endpoint
        """
        pass

    def test_reject_o_auth2_consent_request(self):
        """
        Test case for reject_o_auth2_consent_request

        Reject a consent request
        """
        pass

    def test_revoke_o_auth2_token(self):
        """
        Test case for revoke_o_auth2_token

        Revoke OAuth2 tokens
        """
        pass

    def test_update_o_auth2_client(self):
        """
        Test case for update_o_auth2_client

        Update an OAuth 2.0 Client
        """
        pass

    def test_well_known(self):
        """
        Test case for well_known

        Get list of well known JSON Web Keys
        """
        pass


if __name__ == '__main__':
    unittest.main()
