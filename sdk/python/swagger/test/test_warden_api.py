# coding: utf-8

"""
    Hydra OAuth2 & OpenID Connect Server

    Please refer to the user guide for in-depth documentation: https://ory.gitbooks.io/hydra/content/   Hydra offers OAuth 2.0 and OpenID Connect Core 1.0 capabilities as a service. Hydra is different, because it works with any existing authentication infrastructure, not just LDAP or SAML. By implementing a consent app (works with any programming language) you build a bridge between Hydra and your authentication infrastructure. Hydra is able to securely manage JSON Web Keys, and has a sophisticated policy-based access control you can use if you want to. Hydra is suitable for green- (new) and brownfield (existing) projects. If you are not familiar with OAuth 2.0 and are working on a greenfield project, we recommend evaluating if OAuth 2.0 really serves your purpose. Knowledge of OAuth 2.0 is imperative in understanding what Hydra does and how it works.   The official repository is located at https://github.com/ory/hydra   ### Important REST API Documentation Notes  The swagger generator used to create this documentation does currently not support example responses. To see request and response payloads click on **\"Show JSON schema\"**: ![Enable JSON Schema on Apiary](https://storage.googleapis.com/ory.am/hydra/json-schema.png)   The API documentation always refers to the latest tagged version of ORY Hydra. For previous API documentations, please refer to https://github.com/ory/hydra/blob/<tag-id>/docs/api.swagger.yaml - for example:  0.9.13: https://github.com/ory/hydra/blob/v0.9.13/docs/api.swagger.yaml 0.8.1: https://github.com/ory/hydra/blob/v0.8.1/docs/api.swagger.yaml

    OpenAPI spec version: Latest
    Contact: hi@ory.am
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.warden_api import WardenApi


class TestWardenApi(unittest.TestCase):
    """ WardenApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.warden_api.WardenApi()

    def tearDown(self):
        pass

    def test_add_members_to_group(self):
        """
        Test case for add_members_to_group

        Add members to a group
        """
        pass

    def test_create_group(self):
        """
        Test case for create_group

        Create a group
        """
        pass

    def test_delete_group(self):
        """
        Test case for delete_group

        Delete a group by id
        """
        pass

    def test_does_warden_allow_access_request(self):
        """
        Test case for does_warden_allow_access_request

        Check if an access request is valid (without providing an access token)
        """
        pass

    def test_does_warden_allow_token_access_request(self):
        """
        Test case for does_warden_allow_token_access_request

        Check if an access request is valid (providing an access token)
        """
        pass

    def test_find_groups_by_member(self):
        """
        Test case for find_groups_by_member

        Find groups by member
        """
        pass

    def test_get_group(self):
        """
        Test case for get_group

        Get a group by id
        """
        pass

    def test_remove_members_from_group(self):
        """
        Test case for remove_members_from_group

        Remove members from a group
        """
        pass


if __name__ == '__main__':
    unittest.main()
